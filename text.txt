touch user.model.ts user.controller.ts user.route.ts user.interface.ts user.validation.ts user.service.ts

//

/*
const createUserSchema = z.object({
  name: z.string().min(1),
  email: z.string().email(),
});

type CreateUserDto = z.infer<typeof createUserSchema>;

const parsed = createUserSchema.safeParse(req.body);

if (!parsed.success) {
  return res.status(400).json({
    success: false,
    message: "Invalid input",
    errors: parsed.error.errors,
  });
}
*/
